<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-15T06:14:19.479Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React Native 列表组件</title>
    <link href="http://yoursite.com/2018/01/14/ListView/"/>
    <id>http://yoursite.com/2018/01/14/ListView/</id>
    <published>2018-01-14T08:30:17.000Z</published>
    <updated>2018-01-15T06:14:19.479Z</updated>
    
    <content type="html"><![CDATA[<p>React Native 提供了三种列表组件，分别是：ListView，FlatList 和 SectionList，由于 ListView 已经被弃用，便不再进行详细的说明，本章节主要介绍 FlatList 和 SectionList 的常用属性。</p><h2 id="FaltList"><a href="#FaltList" class="headerlink" title="FaltList"></a>FaltList</h2><p>高性能的简单列表组件，具有以下便利的特性：</p><ul><li>完全跨平台；</li><li>支持水平布局模式；</li><li>行组件显示或隐藏时可配置回调事件；</li><li>支持单独的头部组件；</li><li>支持单独的尾部组件；</li><li>支持自定义行间分隔线；</li><li>支持下拉刷新；</li><li>支持上拉加载；</li><li>支持跳转到指定行（ScrollToIndex）。</li></ul><h3 id="官方例子解析（解决惰性渲染问题）"><a href="#官方例子解析（解决惰性渲染问题）" class="headerlink" title="官方例子解析（解决惰性渲染问题）"></a>官方例子解析（解决惰性渲染问题）</h3><p>由于 FlatList 的惰性渲染，当除了 data 属性以外的数据改变时，可能无法导致界面的重新渲染，因此要通过 extraData 属性来解决该问题,下面上代码.</p><p>/components/MyList.js</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; View, Text, TouchableOpacity &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyListItem</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  _onPress = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.props._onPressItem(<span class="keyword">this</span>.props.id);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> textColor = <span class="keyword">this</span>.props.selected ? <span class="string">'red'</span> : <span class="string">'black'</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;TouchableOpacity onPress=&#123;<span class="keyword">this</span>._onPress&#125;&gt;</span><br><span class="line">        &lt;View&gt;</span><br><span class="line">          &lt;Text style=&#123;&#123; <span class="attr">color</span>: textColor &#125;&#125;&gt;&#123;<span class="keyword">this</span>.props.title&#125;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line">      &lt;<span class="regexp">/TouchableOpacity&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const MyList = &#123;</span></span><br><span class="line"><span class="regexp">  MyListItem</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">export default MyList;</span></span><br></pre></td></tr></table></figure><p>/containers/Devices.js</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FlatList &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> MyList <span class="keyword">from</span> <span class="string">'../components/MyListItem'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">'台式机'</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">title</span>: <span class="string">'笔记本'</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">title</span>: <span class="string">'苹果手机'</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Devices</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      selected: <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 指定是用id代替key</span></span><br><span class="line">  _keyExtrator = <span class="function"><span class="params">item</span> =&gt;</span> item.id;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// onPress事件触发，构造列表项可以被选中的效果</span></span><br><span class="line">  _onPressItem = <span class="function"><span class="params">id</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(id);</span><br><span class="line">    <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> selected = <span class="keyword">new</span> <span class="built_in">Map</span>(prevState.selected);</span><br><span class="line">      selected.set(id, !selected.get(id));</span><br><span class="line">      <span class="built_in">console</span>.log(selected);</span><br><span class="line">      <span class="keyword">return</span> &#123; selected &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 列表项渲染</span></span><br><span class="line">  _renderItem = <span class="function">(<span class="params">&#123; item &#125;</span>) =&gt;</span> (</span><br><span class="line">    &lt;MyList.MyListItem</span><br><span class="line">      id=&#123;item.id&#125;</span><br><span class="line">      _onPressItem=&#123;<span class="keyword">this</span>._onPressItem&#125;</span><br><span class="line">      selected=&#123;!!<span class="keyword">this</span>.state.selected.get(item.id)&#125;</span><br><span class="line">      title=&#123;item.title&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;FlatList</span><br><span class="line">        data=&#123;data&#125;</span><br><span class="line">        extraData=&#123;<span class="keyword">this</span>.state&#125;</span><br><span class="line">        keyExtractor=&#123;<span class="keyword">this</span>._keyExtrator&#125;</span><br><span class="line">        renderItem=&#123;<span class="keyword">this</span>._renderItem&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Devices;</span><br></pre></td></tr></table></figure><p>在这个例子中，构造了“列表项被点击选中时，其内容变红色，再次点击，取消中选中时，其内容变回黑色”这样一个简单的效果,通过父组中 state.selected 来记录相应的列表项是否被选中，同时将改值赋予 FlatList 的 extraData 属性，使其可以被 FlatList 识别。同还用到了其他属性：</p><ul><li>data (指定填充列表的数据，通常为数组)；</li><li>keyExtractor (react 规定所有数据为数组类型的组件，数组的每一项必须指定一个 key 属性以区别于其他数组项，类似与数据库中的主键，通过该属性，可以自己定制主键属性)。</li></ul><p>以此例子为基础，我们来展开对其它属性的学习。</p><h3 id="UI-属性"><a href="#UI-属性" class="headerlink" title="UI 属性"></a>UI 属性</h3><ul><li>ItemSeparatorComponent?: ?ReactClass<any> （行与行之间的分隔线组件。不会出现在第一行之前和最后一行之后。）</any></li><li>ListEmptyComponent?: ?ReactClass<any> | React.Element<any>(列表为空时渲染该组件。可以是 React Component, 也可以是一个 render 函数， 或者渲染好的 element。)</any></any></li><li>ListFooterComponent?: ?ReactClass<any> (尾部组件)</any></li><li>ListHeaderComponent?: ?ReactClass<any> (头部组件)</any></li></ul><p>/components/MyList.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">const ItemSeparatorComponent = () =&gt; (</span><br><span class="line">  &lt;View style=&#123;CommonStyles.separatorLine&#125; /&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const ListEmptyComponent = () =&gt; (</span><br><span class="line">  &lt;View style=&#123;&#123; flex: 1, alignItems: &apos;center&apos;, marginTop: 20 &#125;&#125;&gt;</span><br><span class="line">    &lt;Text style=&#123;CommonStyles.text&#125;&gt;当前没有任何数据!&lt;/Text&gt;</span><br><span class="line">  &lt;/View&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const ListHeaderComponent = (&#123; length = 0 &#125;) =&gt; (</span><br><span class="line">  &lt;View style=&#123;CommonStyles.listHeaderComponent&#125;&gt;</span><br><span class="line">    &lt;Text style=&#123;CommonStyles.smallText&#125;&gt;当前总共&#123;length&#125;条数据&lt;/Text&gt;</span><br><span class="line">  &lt;/View&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const ListFooterComponent = () =&gt; (</span><br><span class="line">  &lt;View style=&#123;CommonStyles.listHeaderComponent&#125;&gt;</span><br><span class="line">    &lt;Text style=&#123;CommonStyles.smallText&#125;&gt;已经到最下面了&lt;/Text&gt;</span><br><span class="line">  &lt;/View&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const MyList = &#123;</span><br><span class="line">  MyListItem,</span><br><span class="line">  ItemSeparatorComponent,</span><br><span class="line">  ListEmptyComponent,</span><br><span class="line">  ListHeaderComponent,</span><br><span class="line">  ListFooterComponent</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>/containers/Devices.js</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;FlatList</span><br><span class="line">      data=&#123;data&#125;</span><br><span class="line">      extraData=&#123;<span class="keyword">this</span>.state&#125;</span><br><span class="line">      keyExtractor=&#123;<span class="keyword">this</span>._keyExtrator&#125;</span><br><span class="line">      renderItem=&#123;<span class="keyword">this</span>._renderItem&#125;</span><br><span class="line">      ItemSeparatorComponent=&#123;MyList.ItemSeparatorComponent&#125;</span><br><span class="line">      ListEmptyComponent=&#123;MyList.ListEmptyComponent&#125;</span><br><span class="line">      ListHeaderComponent=&#123;&lt;MyList.ListHeaderComponent lenght=&#123;data.length&#125; /&gt;&#125;</span><br><span class="line">      ListFooterComponent=&#123;MyList.ListFooterComponent&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><ul><li><strong>onRefresh</strong>?: ?() =&gt; void (如果设置了此选项，则会在列表头部添加一个标准的RefreshControl控件，以便实现“下拉刷新”的功能。同时你需要正确设置refreshing属性。)</li><li><strong>refreshing</strong>?: ?boolean (在等待加载新数据时将此属性设为true，列表就会显示出一个正在加载的符号。)</li></ul><p>如果不喜欢默认的刷新器的颜色，可通过指定属性refreshControl来定制舒心器</p><p>/components/MyList.js<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MyRefreshControl = <span class="function">(<span class="params">&#123; refreshing = <span class="literal">false</span>, _onRefresh &#125;</span>) =&gt;</span> (</span><br><span class="line">  &lt;RefreshControl</span><br><span class="line">    refreshing=&#123;refreshing&#125;</span><br><span class="line">    onRefresh=&#123;_onRefresh&#125;</span><br><span class="line">    title=<span class="string">"正在刷新界面"</span></span><br><span class="line">    tintColor=&#123;AppColor.THEME&#125;</span><br><span class="line">    titleColor=&#123;AppColor.FONT&#125;</span><br><span class="line">  /&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>/containers/Devices.js<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下拉刷新事件</span></span><br><span class="line">_onRefresh = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'refresh'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;FlatList</span><br><span class="line">  data=&#123;data&#125;</span><br><span class="line">  extraData=&#123;<span class="keyword">this</span>.state&#125;</span><br><span class="line">  keyExtractor=&#123;<span class="keyword">this</span>._keyExtrator&#125;</span><br><span class="line">  renderItem=&#123;<span class="keyword">this</span>._renderItem&#125;</span><br><span class="line">  ItemSeparatorComponent=&#123;MyList.ItemSeparatorComponent&#125;</span><br><span class="line">  ListEmptyComponent=&#123;MyList.ListEmptyComponent&#125;</span><br><span class="line">  ListHeaderComponent=&#123;</span><br><span class="line">    &lt;MyList.ListHeaderComponent lenght=&#123;data.length&#125; /&gt;</span><br><span class="line">  &#125;</span><br><span class="line">  ListFooterComponent=&#123;MyList.ListFooterComponent&#125;</span><br><span class="line">  refreshControl=&#123;</span><br><span class="line">    &lt;MyList.MyRefreshControl</span><br><span class="line">      refreshing=&#123;<span class="literal">false</span>&#125;</span><br><span class="line">      _onRefresh=&#123;<span class="keyword">this</span>._onRefresh&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">  &#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;React Native 提供了三种列表组件，分别是：ListView，FlatList 和 SectionList，由于 ListView 已经被弃用，便不再进行详细的说明，本章节主要介绍 FlatList 和 SectionList 的常用属性。&lt;/p&gt;
&lt;h2 id=
      
    
    </summary>
    
    
      <category term="react-native" scheme="http://yoursite.com/tags/react-native/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题</title>
    <link href="http://yoursite.com/2018/01/11/leet-code/"/>
    <id>http://yoursite.com/2018/01/11/leet-code/</id>
    <published>2018-01-11T00:15:41.000Z</published>
    <updated>2018-01-15T02:09:53.079Z</updated>
    
    <content type="html"><![CDATA[<p>题目均源自 <a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a> (ง •̀_•́)ง</p><h2 id="Easy"><a href="#Easy" class="headerlink" title="Easy"></a>Easy</h2><h3 id="Find-Anagram-Mappings"><a href="#Find-Anagram-Mappings" class="headerlink" title="Find Anagram Mappings"></a>Find Anagram Mappings</h3><p>Given two lists Aand B, and B is an anagram of A. B is an anagram of A means B is made by randomizing the order of the elements in A.</p><p>We want to find an index mapping P, from A to B. A mapping P[i] = j means the ith element in A appears in B at index j.</p><p>These lists A and B may contain duplicates. If there are multiple answers, output any of them.</p><p>For example, given</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">12</span>, <span class="number">28</span>, <span class="number">46</span>, <span class="number">32</span>, <span class="number">50</span>]</span><br><span class="line">B = [<span class="number">50</span>, <span class="number">12</span>, <span class="number">32</span>, <span class="number">46</span>, <span class="number">28</span>]</span><br></pre></td></tr></table></figure><p>We should return<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure></p><p>as P[0] = 1 because the 0th element of A appears at B[1], and P[1] = 4 because the 1st element of A appears at B[4], and so on.</p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> anagramMappings = <span class="function"><span class="keyword">function</span>(<span class="params">A, B</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.map(<span class="function"><span class="params">item</span> =&gt;</span> B.indexOf(item));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hamming-Distance"><a href="#Hamming-Distance" class="headerlink" title="Hamming Distance"></a>Hamming Distance</h3><p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.</p><p>Given two integers x and y, calculate the Hamming distance.</p><p>Note:<br>0 ≤ x, y &lt; 231.</p><p>Example:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: x = <span class="number">1</span>, y = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">Output: <span class="number">2</span></span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line"><span class="number">1</span>   (<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>)</span><br><span class="line"><span class="number">4</span>   (<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>)</span><br><span class="line">       ↑   ↑</span><br></pre></td></tr></table></figure></p><p>The above arrows point to positions where the corresponding bits are different.</p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> hammingDistance = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x ^ y).toString(<span class="number">2</span>).replace(<span class="regexp">/0/g</span>, <span class="string">''</span>).length</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如何处理负数呢？(﹁”﹁)<br>javascript中没有无符号位的数，因此在处理负数时，通过&gt;&gt;&gt;操作符先将其转换为无符号的等价形式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((x ^ y) &gt;&gt;&gt; <span class="number">0</span>).toString(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="Merge-Two-Binary-Trees"><a href="#Merge-Two-Binary-Trees" class="headerlink" title="Merge Two Binary Trees"></a>Merge Two Binary Trees</h3><p>Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.</p><p>You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.</p><p>Example 1:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Input: </span><br><span class="line">Tree <span class="number">1</span>                     Tree <span class="number">2</span>                  </span><br><span class="line">          <span class="number">1</span>                         <span class="number">2</span>                             </span><br><span class="line">         / \                       / \                            </span><br><span class="line">        <span class="number">3</span>   <span class="number">2</span>                     <span class="number">1</span>   <span class="number">3</span>                        </span><br><span class="line">       /                           \   \                      </span><br><span class="line">      <span class="number">5</span>                             <span class="number">4</span>   <span class="number">7</span>                  </span><br><span class="line">Output: </span><br><span class="line">Merged tree:</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">    / \</span><br><span class="line">   <span class="number">4</span>   <span class="number">5</span></span><br><span class="line">  / \   \ </span><br><span class="line"> <span class="number">5</span>   <span class="number">4</span>   <span class="number">7</span></span><br></pre></td></tr></table></figure></p><p>Note: The merging process must start from the root nodes of both trees.</p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; t1</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; t2</span></span><br><span class="line"><span class="comment"> * @return &#123;TreeNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> mergeTrees = <span class="function"><span class="keyword">function</span>(<span class="params">t1, t2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!t1 &amp;&amp; !t2) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> root = <span class="keyword">new</span> TreeNode(((t1 || <span class="number">0</span>).val || <span class="number">0</span>) + ((t2 || <span class="number">0</span>).val || <span class="number">0</span>));</span><br><span class="line">    root.left = mergeTrees(t1 &amp;&amp; t1.left, t2 &amp;&amp; t2.left);</span><br><span class="line">    root.right = mergeTrees(t1 &amp;&amp; t1.right, t2 &amp;&amp; t2.right);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Reverse-Words-in-a-String-III"><a href="#Reverse-Words-in-a-String-III" class="headerlink" title="Reverse Words in a String III"></a>Reverse Words in a String III</h3><p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p><p>Example 1:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: <span class="string">"Let's take LeetCode contest"</span></span><br><span class="line">Output: <span class="string">"s'teL ekat edoCteeL tsetnoc"</span></span><br></pre></td></tr></table></figure></p><p>Note: In the string, each word is separated by single space and there will not be any extra space in the string.</p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseWords = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> s</span><br><span class="line">    .split(<span class="string">' '</span>)</span><br><span class="line">    .map(<span class="function"><span class="params">item</span> =&gt;</span></span><br><span class="line">      item</span><br><span class="line">        .split(<span class="string">''</span>)</span><br><span class="line">        .reverse()</span><br><span class="line">        .join(<span class="string">''</span>)</span><br><span class="line">    )</span><br><span class="line">    .join(<span class="string">' '</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Reshape-the-Matrix"><a href="#Reshape-the-Matrix" class="headerlink" title="Reshape the Matrix"></a>Reshape the Matrix</h3><p>In MATLAB, there is a very useful function called ‘reshape’, which can reshape a matrix into a new one with different size but keep its original data.</p><p>You’re given a matrix represented by a two-dimensional array, and two positive integers r and c representing the row number and column number of the wanted reshaped matrix, respectively.</p><p>The reshaped matrix need to be filled with all the elements of the original matrix in the same row-traversing order as they were.</p><p>If the ‘reshape’ operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.</p><p><strong>Example 1</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Input: </span><br><span class="line">nums = </span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line"> [<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">r = <span class="number">1</span>, c = <span class="number">4</span></span><br><span class="line">Output: </span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">Explanation:</span><br><span class="line">The row-traversing <span class="keyword">of</span> nums is [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]. The <span class="keyword">new</span> reshaped matrix is a <span class="number">1</span> * <span class="number">4</span> matrix, fill it row by row by using the previous list.</span><br></pre></td></tr></table></figure></p><p><strong>Example 2</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: </span><br><span class="line">nums = </span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line"> [<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">r = <span class="number">2</span>, c = <span class="number">4</span></span><br><span class="line">Output: </span><br><span class="line">[[<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line"> [<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">Explanation:</span><br><span class="line">There is no way to reshape a <span class="number">2</span> * <span class="number">2</span> matrix to a <span class="number">2</span> * <span class="number">4</span> matrix. So output the original matrix.</span><br></pre></td></tr></table></figure></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[][]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; r</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; c</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> matrixReshape = <span class="function"><span class="keyword">function</span>(<span class="params">nums, r, c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> length = nums.length * nums[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">if</span> ((r * c != length) || (r === nums.length &amp;&amp; c === nums[<span class="number">0</span>].length)) <span class="keyword">return</span> nums; </span><br><span class="line">    <span class="comment">// 先降维</span></span><br><span class="line">    <span class="keyword">const</span> newNums = nums.reduce(<span class="function">(<span class="params">total, num</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> total.concat(num);</span><br><span class="line">    &#125;, []);</span><br><span class="line">    <span class="keyword">const</span> matrix = [];</span><br><span class="line">    <span class="built_in">console</span>.log(nums);</span><br><span class="line">    <span class="comment">// 再构造</span></span><br><span class="line">    newNums.reduce(<span class="function">(<span class="params">total, num, idx</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (idx === c - <span class="number">1</span> || (idx + <span class="number">1</span>) % c === <span class="number">0</span>) &#123;</span><br><span class="line">            total.push(num);</span><br><span class="line">            matrix.push(total);</span><br><span class="line">            total = [];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            total.push(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    &#125;, []);</span><br><span class="line">    <span class="keyword">return</span> matrix;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Island-Perimeter"><a href="#Island-Perimeter" class="headerlink" title="Island Perimeter"></a>Island Perimeter</h3><p>You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn’t have “lakes” (water inside that isn’t connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don’t exceed 100. Determine the perimeter of the island.</p><p><strong>Example:</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line"> [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line"> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line"> [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">Answer: <span class="number">16</span></span><br></pre></td></tr></table></figure></p><p>Explanation: The perimeter is the 16 yellow stripes in the image below:<br><img src="/images/island.png" alt="island"></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[][]&#125; grid</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> islandPerimeter = <span class="function"><span class="keyword">function</span>(<span class="params">grid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line">    grid.forEach(<span class="function">(<span class="params">cell, r</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> c = <span class="number">0</span>; c &lt; cell.length; c++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cell[c] === <span class="number">1</span> ) &#123;</span><br><span class="line">                total += <span class="number">4</span>;</span><br><span class="line">                <span class="comment">// 除却第一行，顶部有重合边</span></span><br><span class="line">                <span class="keyword">if</span> (r &gt; <span class="number">0</span> &amp;&amp; grid[r - <span class="number">1</span>][c] === <span class="number">1</span>) total -= <span class="number">2</span>;</span><br><span class="line">                <span class="comment">// 除却第一列，左边有重合边</span></span><br><span class="line">                <span class="keyword">if</span> (c &gt; <span class="number">0</span> &amp;&amp; grid[r][c - <span class="number">1</span>] === <span class="number">1</span>) total -= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目均源自 &lt;a href=&quot;https://leetcode.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeetCode&lt;/a&gt; (ง •̀_•́)ง&lt;/p&gt;
&lt;h2 id=&quot;Easy&quot;&gt;&lt;a href=&quot;#Easy&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="leetCode" scheme="http://yoursite.com/tags/leetCode/"/>
    
  </entry>
  
  <entry>
    <title>Redux Saga常用API</title>
    <link href="http://yoursite.com/2018/01/10/redux-saga/"/>
    <id>http://yoursite.com/2018/01/10/redux-saga/</id>
    <published>2018-01-10T02:14:07.000Z</published>
    <updated>2018-01-10T02:15:12.192Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>English</title>
    <link href="http://yoursite.com/2018/01/09/english/"/>
    <id>http://yoursite.com/2018/01/09/english/</id>
    <published>2018-01-09T14:18:23.000Z</published>
    <updated>2018-01-14T08:29:17.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="older"><a href="#older" class="headerlink" title="older"></a>older</h2><p>They overlooked the <strong>enormous</strong> risks involved.</p><hr><p>Police and firemen continued to hasten <strong>evacuation</strong> of the hotel.</p><hr><p>The children exploded three firecracks.</p><hr><h2 id="2018-1-9"><a href="#2018-1-9" class="headerlink" title="2018-1-9"></a>2018-1-9</h2><p>Many people was attracted by her <strong>engaging</strong> smile.</p><hr><p>Michelangelo carved in marble.</p><p>The house has a superb staircase made from oak and <strong>marble</strong>.</p><hr><p>He was, on his own <strong>admission</strong>, <em>impulsive</em>(adj. 冲动的,任性的)  by nature.</p><p>Students apply for <strong>admission</strong> to a particular collage.</p><hr><p><strong>Flora</strong> of clay desert is similar to that of <em>detritus</em>(n. 碎屑,碎石) desert.</p><hr><p>He’s a talktive guy, and I <em>struck up</em>(使开始，建立起) a <strong>conversation</strong> with him.</p><hr><p>An old friend <strong>hailed</strong> me from the orther side of the street.</p><p>Faulkner has benn <strong>hailed</strong> as a greatest American novelist of his generation.</p><p>…a sharp short-lived storm with heavy <strong>hail</strong>.</p><hr><p>He <strong>lunged</strong> widly at his opponent.</p><p>He <strong>lunged</strong> at me, grabbing me violently.</p><hr><p>Give the bottle a couple of shakes before pouring the <strong>juice</strong>.</p><hr><p>She was irritated(v. 激怒) by his <strong>savage</strong> behavior.</p><hr><p>By the next day, it has risen 9 meters becoming <strong>unbridgeableI</strong>.</p><p>…the <em>so-called</em>(所谓的) <strong>unbridgeable</strong> gap between the world of humans and that of chimpanzees.</p><hr><p>he painted the wall with a <strong>brush</strong>.</p><hr><p>This term we will <strong>initiate</strong> a new teching plan.</p><p>He <strong>initiated</strong> her into the study of other cultures.</p><h2 id="2018-1-10"><a href="#2018-1-10" class="headerlink" title="2018-1-10"></a>2018-1-10</h2><p>In all cases the same <strong>fundamental</strong> principles apply.</p><hr><p>The eassy was a meaningless <strong>jumble</strong> of ideas.</p><hr><p>You have to learn not to <strong>recoil</strong> from touching the insects.</p><p>For a moment I thought he was going to kiss me. I <strong>recoiled</strong> in horror.</p><hr><p>Have you got any <strong>proof</strong> that you own this bike.</p><hr><p>He seemed to have a very <strong>selective</strong> recall of past events.</p><p><strong>Selective</strong> breeding may result in a greyhound running faster and seeing better than a wolf.</p><hr><p>I have never in my entire life heard such <strong>nonsense</strong>!</p><p>Most <em>orthodox</em>(传统的) however dismiss this as complete <strong>nonsenese</strong>.</p><hr><p>He was attended by his personal <strong>physician</strong>.</p><hr><p>In some countries air temperature is given in degrees of <strong>Fahrenheit</strong>.</p><hr><p>His <strong>implication</strong> in the crime was obvious to all.</p><p>The <em>Attorney</em>(律师) General was aware of the political <strong>implications</strong> of his decision to <em>prosecute</em>(v. 起诉).</p><hr><p><strong>Articulate</strong> speech is essential for a teacher.</p><p>The president has benn accused of failing to <strong>articulate</strong> an overall vision in foreign affairs.</p><hr><p>There is nothing particularly <strong>noteworthy</strong> in this paper.</p><hr><p>Parents often <strong>dote</strong> on their youngest child.</p><h2 id="2018-1-11"><a href="#2018-1-11" class="headerlink" title="2018-1-11"></a>2018-1-11</h2><p>An arc is a portion of an <strong>ellipse</strong>.</p><p>The Eath orbits in an <strong>ellipse</strong>.</p><hr><p><strong>Versatile</strong> actors can play all kinds of roles.</p><hr><p>You will be informed the details at the <strong>appropriate</strong> time.</p><hr><p>The experiece of internatilal home proves, what can <strong>induct</strong>(使入门，使就职，引导) obtain employment most is medium and small businesses.</p><hr><p>The rules for the competition are somewhat <strong>obscure</strong>.</p><hr><p>He is <strong>adroit</strong> in handling machinery.</p><hr><p>The company’s main problem is the shortage of skilled <strong>personnel</strong>.</p><hr><p>His cheerful manner <strong>belied</strong> his real feelings.</p><hr><p>Happindess is not always <strong>annexed</strong> to wealth.</p><hr><p>The prospect from <strong>balcony</strong> was <em>breathtaking</em>(令人赞叹的，壮观的).</p><hr><p>He fired and hit the <strong>outermost</strong> ring of the target.</p><hr><p>He showed a <strong>propensity</strong> for violence.</p><hr><p>Ait is the object of feeling, and the <strong>subject</strong> of nature.</p><h2 id="2018-1-12"><a href="#2018-1-12" class="headerlink" title="2018-1-12"></a>2018-1-12</h2><p>He <strong>hustled</strong> into and out of the office.</p><hr><p>The restaurant decides to <strong>engage</strong> a pop singer.</p><p>I have never <strong>engaged</strong> in drug trafficking.</p><p>They never learned skills to <strong>engage</strong> the attention of the others.</p><hr><p>The <strong>wick</strong> is the <em>quintessence</em>(精华) of the candle.</p><hr><p><em>Sketch</em>(素描) experssion is both <strong>perceptual</strong> and <em>rational</em>(理性的).</p><hr><p>We recommend this brand(商标，牌子) as a good <strong>substitute</strong>.</p><p>They were <strong>substituting</strong> violence for dialogue.</p><hr><p>All girls want to be <strong>slender</strong>;</p><hr><p>He managed to <strong>avert</strong> suspicion(怀疑，猜疑).</p><hr><p>It is not constitutional to <strong>censor</strong> the press(新闻界，出版社).</p><hr><p>The running of the <strong>reactor</strong> will evolve tremendous heat.</p><hr><p>The king <em>banished</em>(驱逐，放逐) the traitor(叛徒，卖国贼) form the <strong>realm</strong>.</p><hr><p>It is easier to think in <strong>concrete</strong> terms rather than in the abstract.</p><p>The posts(柱子) have to be set in <strong>concrete</strong>.</p><hr><p><em>Herdsmen</em>(牧民) are rigging up a Mongolian <em>yurt</em>(蒙古包) as a new domicile.</p><h2 id="2018-1-13"><a href="#2018-1-13" class="headerlink" title="2018-1-13"></a>2018-1-13</h2><p>Men live on the <strong>terrestrial</strong> parts of the earth.</p><hr><p>The bell tower is the <strong>emblem</strong> of this city.</p><hr><p>We warmed our hands near the <strong>blaze</strong> of the compfire.</p><hr><p>The most important part of the cell is the <strong>nucleus</strong>.</p><hr><p>This island is <strong>triangular</strong> in shape.</p><hr><p>I pray that you will have pity on my <strong>distress</strong>.</p><hr><p>Her <strong>skull</strong> had been fractured by two separate blows.</p><hr><p>Water is a very good <strong>solvent</strong>(adj 有偿还能力的，有溶解能力的 n.溶剂，解决者) for <em>ionic</em>(离子) species.</p><hr><p><em>Germs</em>(细菌) may <strong>invade</strong> the <em>organism</em>(有机体).</p><hr><p>The <em>mansion</em>(大厦) has <strong>extensive</strong> grounds.</p><hr><p>I had the <strong>privilege</strong> of meeting the queen.</p><hr><p>Instead, it’s a kind of <strong>generic</strong> publication that stands for all of the potential publications that your set.</p><h2 id="2018-1-14"><a href="#2018-1-14" class="headerlink" title="2018-1-14"></a>2018-1-14</h2><p>I’d like to have <strong>laundry</strong> service.</p><hr><p>The <strong>husk</strong> of this coconut is paritcularly strong.</p><hr><p>He alighted on a rare medical <strong>herb</strong>.</p><hr><p>He <strong>grabbed</strong> my collar and pulled me towards him.</p><hr><p>The <strong>seal</strong> on this bottle is broken.</p><hr><p>Her <strong>disquiet</strong> made us unearsy too.</p><hr><p>This slience was <strong>uncannny</strong>.</p><hr><p>They moved to the country to <strong>cultivate</strong> the soil.</p><hr><p>This kids went <strong>crazy</strong> when the film star appeared.</p><hr><p>This workers <strong>migrate</strong> from country to country in search of work.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;older&quot;&gt;&lt;a href=&quot;#older&quot; class=&quot;headerlink&quot; title=&quot;older&quot;&gt;&lt;/a&gt;older&lt;/h2&gt;&lt;p&gt;They overlooked the &lt;strong&gt;enormous&lt;/strong&gt; risks involv
      
    
    </summary>
    
    
      <category term="English" scheme="http://yoursite.com/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>使用Redux Form快速构建表单的redux数据流</title>
    <link href="http://yoursite.com/2018/01/09/redux-form/"/>
    <id>http://yoursite.com/2018/01/09/redux-form/</id>
    <published>2018-01-09T00:06:21.000Z</published>
    <updated>2018-01-11T08:55:59.350Z</updated>
    
    <content type="html"><![CDATA[<p>无论再那种应用中，表单都是一种常见的提交数据的方式，在 reac 或 react native 中也不例外。但是，当通过 redux 来管理应用的数据之后，该如何来构建表单的数据流呢？或者更简单的说，对于使用 redux 处理表单的数据，需要哪些 Action 呢？经过简单的思考，可以想到这些 Action:</p><ul><li>表单组件挂载时，初始化（或者说创建）表单数据；</li><li>用户更改表单数据时，修改相应的 state 的值；</li><li>表单数据同步验证；<br>…..</li><li>离开表单界面时，销毁数据</li></ul><p>Rdux Form 的作用正是通过 React 高阶组件的方式，自动创建这些数据流。由于高阶组件的本质是纯函数，不会受到原组件的结构影响，所以即使 React Native 中没有 form 相关的概念，依然适用。由于官网已经给出了 react 的相关例子，因此我在记录时，改用 React Native，同时在例子中配合使用了 immutable。</p><h2 id="将-form-加入到-reducer-中"><a href="#将-form-加入到-reducer-中" class="headerlink" title="将 form 加入到 reducer 中"></a>将 form 加入到 reducer 中</h2><p>redux/reducers/index.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux-immutable'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; reducer <span class="keyword">as</span> form &#125; <span class="keyword">from</span> <span class="string">'redux-form/immutable'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> appReducers = combineReducers(&#123;</span><br><span class="line">  <span class="comment">// ...你的其他reducers</span></span><br><span class="line">  form</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="使用-Form-高阶组件包裹原组件"><a href="#使用-Form-高阶组件包裹原组件" class="headerlink" title="使用 Form 高阶组件包裹原组件"></a>使用 Form 高阶组件包裹原组件</h2><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SendMessageForm = reduxForm(&#123; <span class="attr">form</span>: <span class="string">'message'</span> &#125;)(SendMessageView);</span><br></pre></td></tr></table></figure></p><p>高阶组键一般采用<em>柯里化</em>的方式传递参数，当前步骤需要两个参数，这里的 SendMessageView 为表单界面的 UI 组件</p><h2 id="使用-Field-组建包裹表单控件（如-Input-Select…）"><a href="#使用-Field-组建包裹表单控件（如-Input-Select…）" class="headerlink" title="使用 Field 组建包裹表单控件（如 Input,Select…）"></a>使用 Field 组建包裹<em>表单控件</em>（如 Input,Select…）</h2><p>containers/SendMessage.js<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Field</span><br><span class="line">  name=<span class="string">"theme"</span></span><br><span class="line">  component=&#123;CommonInput&#125;</span><br><span class="line">  placeholder=<span class="string">"请输入主题"</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>将CommonInput作为component属性的参数传入，如果CommonInput也需要某写属性，可直接作为Field的属性传入。同时，我也打印了日志文件的输出（通过<a href="https://redux-saga.js.org/docs/advanced/FutureActions.html" target="_blank" rel="noopener">redux-saga</a>创建的一个简单日志），可以“监听”redux的一举一动。<br><strong>日志：</strong> action {type: “@@redux-form/REGISTER_FIELD”, meta: {…}, payload: {…}}</p><h2 id="改造表单控件"><a href="#改造表单控件" class="headerlink" title="改造表单控件"></a>改造表单控件</h2><p>components/CommonInput.js<br><strong>改造前</strong><br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Input &#125; <span class="keyword">from</span> <span class="string">'teaset'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入框</span></span><br><span class="line"><span class="keyword">const</span> CommonInput = (&#123;</span><br><span class="line">  placeholder = <span class="literal">null</span>,</span><br><span class="line">  value = <span class="literal">null</span>,</span><br><span class="line">  onChangeText = <span class="literal">null</span>,</span><br><span class="line">  width = <span class="number">150</span>,</span><br><span class="line">  height = <span class="number">34</span>,</span><br><span class="line">  ...rest</span><br><span class="line">&#125;) =&gt; (</span><br><span class="line">  &lt;Input</span><br><span class="line">    style=&#123;&#123; width, height &#125;&#125;</span><br><span class="line">    placeholder=&#123;placeholder&#125;</span><br><span class="line">    value=&#123;value&#125;</span><br><span class="line">    onChangeText=&#123;onChangeText&#125;</span><br><span class="line">    &#123;...rest&#125;</span><br><span class="line">  /&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p><strong>改造后</strong><br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CommonInput = (&#123;</span><br><span class="line">  placeholder = <span class="literal">null</span>,</span><br><span class="line">  width = <span class="number">150</span>,</span><br><span class="line">  height = <span class="number">34</span>,</span><br><span class="line">  input,</span><br><span class="line">  ...rest</span><br><span class="line">&#125;) =&gt; (</span><br><span class="line">  &lt;Input</span><br><span class="line">    style=&#123;&#123; width, height &#125;&#125;</span><br><span class="line">    placeholder=&#123;placeholder&#125;</span><br><span class="line">    value=&#123;input &amp;&amp; input.value ? input.value : <span class="literal">null</span>&#125;</span><br><span class="line">    onChangeText=&#123;inputText =&gt; input.onChange(inputText)&#125;</span><br><span class="line">    &#123;...rest&#125;</span><br><span class="line">  /&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>通过redux-form自动传入的属性input，我们可以获取和修改相应的state。<br><strong>日志：</strong><br>action {type: “@@redux-form/CHANGE”, meta: {…}, payload: “S”}</p><p>action {type: “@@redux-form/CHANGE”, meta: {…}, payload: “Sd”}</p><p>action {type: “@@redux-form/CHANGE”, meta: {…}, payload: “Sdf”}</p><h2 id="添加表单同步验证"><a href="#添加表单同步验证" class="headerlink" title="添加表单同步验证"></a>添加表单同步验证</h2><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> validate = <span class="function"><span class="params">values</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> errors = &#123;&#125;;</span><br><span class="line">  <span class="keyword">if</span> (!values.get(<span class="string">'theme'</span>)) &#123;</span><br><span class="line">    errors.theme = <span class="string">'Required'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> errors;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> SendMessageForm = reduxForm(&#123;</span><br><span class="line">  form: <span class="string">'message'</span>,</span><br><span class="line">  validate</span><br><span class="line">&#125;)(SendMessageView);</span><br></pre></td></tr></table></figure></p><p><strong>日志：</strong> action {type: “@@redux-form/UPDATE_SYNC_ERRORS”, meta: {…}, payload: {…}}</p><h2 id="通过formValueSelect快速获取字段"><a href="#通过formValueSelect快速获取字段" class="headerlink" title="通过formValueSelect快速获取字段"></a>通过formValueSelect快速获取字段</h2><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reduxForm, Field, formValueSelector &#125; <span class="keyword">from</span> <span class="string">'redux-form/immutable'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> select = formValueSelector(<span class="string">'message'</span>);</span><br><span class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">  users:</span><br><span class="line">    state.getIn([<span class="string">'employees'</span>, <span class="string">'data'</span>]) &amp;&amp;</span><br><span class="line">    state.getIn([<span class="string">'employees'</span>, <span class="string">'data'</span>]).toJS(),</span><br><span class="line">  company: select(state, <span class="string">'company'</span>),</span><br><span class="line">  dept: select(state, <span class="string">'dept'</span>),</span><br><span class="line">  sendName: state.getIn([<span class="string">'auth'</span>, <span class="string">'data'</span>, <span class="string">'name'</span>])</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="提交表单"><a href="#提交表单" class="headerlink" title="提交表单"></a>提交表单</h2><p>提交表单时，会根据validate函数自动验证,如果失败，则不会触发处理提交的函数</p><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">submit = <span class="function"><span class="params">values</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    employee,</span><br><span class="line">    lx,</span><br><span class="line">    theme,</span><br><span class="line">    content,</span><br><span class="line">    zt,</span><br><span class="line">    action</span><br><span class="line">  &#125; = values.toJS();</span><br><span class="line">  <span class="keyword">this</span>.props.sendMessageFetch(</span><br><span class="line">    employee,</span><br><span class="line">    <span class="keyword">this</span>.props.sendName,</span><br><span class="line">    lx,</span><br><span class="line">    theme,</span><br><span class="line">    content,</span><br><span class="line">    zt,</span><br><span class="line">    action</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">this</span>.props.reset();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">  title=<span class="string">"发送"</span></span><br><span class="line">  backgroundColor=&#123;AppColor.SUCCESS&#125;</span><br><span class="line">  borderRadius=&#123;<span class="number">5</span>&#125;</span><br><span class="line">  containerViewStyle=&#123;CommonStyles.elementButton&#125;</span><br><span class="line">  onPress=&#123;<span class="keyword">this</span>.props.handleSubmit(<span class="keyword">this</span>.submit)&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>这里与react中有些区别，需要handlesubmit属性去触发onSubmit事件，然后将处理提交的函数作为其参数。</p><h2 id="清空表单"><a href="#清空表单" class="headerlink" title="清空表单"></a>清空表单</h2><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.props.reset();</span><br></pre></td></tr></table></figure></p><h2 id="改值"><a href="#改值" class="headerlink" title="改值"></a>改值</h2><p>containers/SendMessage.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.props.change(<span class="string">'fieldName'</span>, values);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;无论再那种应用中，表单都是一种常见的提交数据的方式，在 reac 或 react native 中也不例外。但是，当通过 redux 来管理应用的数据之后，该如何来构建表单的数据流呢？或者更简单的说，对于使用 redux 处理表单的数据，需要哪些 Action 呢？经过简单
      
    
    </summary>
    
    
      <category term="react-native" scheme="http://yoursite.com/tags/react-native/"/>
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://yoursite.com/2018/01/08/git-commmand/"/>
    <id>http://yoursite.com/2018/01/08/git-commmand/</id>
    <published>2018-01-08T05:00:40.000Z</published>
    <updated>2018-01-09T14:49:22.196Z</updated>
    
    <content type="html"><![CDATA[<p>git是一个分布式版本控制工具，与CVS、SVN一类的集中式控制工具不同就，分布式版本库不需要服务器端软件，就可以运作版本控制。除此之外，git和其他版本控制工具还有不少的差别，git本身关心文件的整体性是否又改变，但多数的版本控制系统如CVS则再无文件内容的差异；git更像一个文件系统，直接在本机上获取数据而不必链接到主机端，每个开发者都拥有全部开发历史的本地副本。但是如果要与小伙伴们合作开发，还是需要将changes提交到远程的<em>代码仓库</em>（如<a href="https://github.com" target="_blank" rel="noopener">github</a>、<a href="https://gitee.com" target="_blank" rel="noopener">码云</a>、<a href="https://about.gitlab.com" target="_blank" rel="noopener">gitlab</a>、<a href="https://coding.net" target="_blank" rel="noopener">coding</a>）。这些changes可以作为新增的开发分支导入，也可以与本地开发分支合并。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ul><li><strong>初始化本地仓库</strong></li></ul><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><ul><li><strong>把要提交的changes放到暂存区</strong></li></ul><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><ul><li><strong>将暂存区的所有changes提交到分支</strong></li></ul><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">"Initial Commit"</span></span><br></pre></td></tr></table></figure><ul><li><strong>添加远程仓库（origin为远程仓库的名字）</strong></li></ul><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:uername/reponsitory.git</span><br></pre></td></tr></table></figure><ul><li><strong>将本地库的内容（master分支）推送到远程库（origin）,-u选项可以将远程库与本地库的分支关联起来</strong></li></ul><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>无论一个项目是否是由多人合作开发，分支管理都有其存在的必要性。一般来说，除却仓库初始化时会自动建立主分支（即master分支），以后的每一次开发或迭代都需要基于自己创建的开发分支，当开发分支上的项目确认没有bug之后，才能够和master分支合并。可以想象，如果在开发分支上的代码出现了难以处理的bug的时候，我们依然可以切换回master分支或者其他分支来获取能正常运行的项目。</p><h3 id="查看远程库信息"><a href="#查看远程库信息" class="headerlink" title="查看远程库信息"></a>查看远程库信息</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><h3 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><h3 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br></pre></td></tr></table></figure><h3 id="创建本地分支"><a href="#创建本地分支" class="headerlink" title="创建本地分支"></a>创建本地分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch [name]</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout [name]</span><br></pre></td></tr></table></figure><h3 id="创建新分支并立即切换到新分支"><a href="#创建新分支并立即切换到新分支" class="headerlink" title="创建新分支并立即切换到新分支"></a>创建新分支并立即切换到新分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b [name]</span><br></pre></td></tr></table></figure><h3 id="推送本地分支"><a href="#推送本地分支" class="headerlink" title="推送本地分支"></a>推送本地分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push [远程仓库名] [本地分支名]:[远程分支名]</span><br></pre></td></tr></table></figure><h3 id="获取远程分支"><a href="#获取远程分支" class="headerlink" title="获取远程分支"></a>获取远程分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch [远程仓库名]/[远程分支名]</span><br></pre></td></tr></table></figure><h3 id="更新本地分支"><a href="#更新本地分支" class="headerlink" title="更新本地分支"></a>更新本地分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull [远程仓库名] [远程分支名]:[本地分支名]</span><br></pre></td></tr></table></figure><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge [name]</span><br></pre></td></tr></table></figure><h3 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d [name]</span><br><span class="line">git branch -D [name]</span><br></pre></td></tr></table></figure><p>-d选项只能删除已合并的分支</p><h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [远程仓库名] :[远程分支名]</span><br></pre></td></tr></table></figure><h2 id="打标签-打版本号"><a href="#打标签-打版本号" class="headerlink" title="打标签(打版本号)"></a>打标签(打版本号)</h2><h3 id="显示已有标签"><a href="#显示已有标签" class="headerlink" title="显示已有标签"></a>显示已有标签</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><h3 id="新建标签"><a href="#新建标签" class="headerlink" title="新建标签"></a>新建标签</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag [标签名]</span><br></pre></td></tr></table></figure><h3 id="查看相应标签的版本信息"><a href="#查看相应标签的版本信息" class="headerlink" title="查看相应标签的版本信息"></a>查看相应标签的版本信息</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show [标签名]</span><br></pre></td></tr></table></figure><h3 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d [标签名]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;git是一个分布式版本控制工具，与CVS、SVN一类的集中式控制工具不同就，分布式版本库不需要服务器端软件，就可以运作版本控制。除此之外，git和其他版本控制工具还有不少的差别，git本身关心文件的整体性是否又改变，但多数的版本控制系统如CVS则再无文件内容的差异；git更
      
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/01/07/hello-world/"/>
    <id>http://yoursite.com/2018/01/07/hello-world/</id>
    <published>2018-01-06T16:00:00.000Z</published>
    <updated>2018-01-08T05:10:24.642Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
